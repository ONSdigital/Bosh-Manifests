# This file is meant to be used in combinatio with one of the *-Adjustment.yml files
---
name: ((deployment_name))

# Pull out these values to enrich the bosh-config.sh
metadata:
  director_ca: ((default_ca.certificate))
  director_secret: ((director_password))

releases:
- name: bosh
  # https://bosh.io/releases/github.com/cloudfoundry/bosh?all=1
  url: https://bosh.io/d/github.com/cloudfoundry/bosh?v=265.1.0
  sha1: f86549c6ddec61c707a6bf359a9a2188951a7d93

resource_pools:
- name: bosh_vm
  network: cf_director
  env:
    bosh:
      # The following should work to generate a new password:
      # echo "$PASSWORD $SALT" | perl -ane 'print crypt($F[0],sprintf(q($6$%s$),$F[1])).qq(\n)'
      #
      # c1oudc0w
      password: $6$GiQp7XJ3AYAnpUpZ$zGUSoI6OATmb4ff0k60ZFIk/pMNypGxqMoihspINUAS8Fk6p0Dz/PIMzFfguZIbLSeJPB5PkNMCNzkO4yJqp8/
      mbus:
        cert: ((mbus_bootstrap_ssl))
  cloud_properties:
    ephemeral_disk: {size: 20_000 }

disk_pools:
- name: tiny_disk
  disk_size: 1_000
- name: small_disk 
  disk_size: 10_000
- name: large_disk
  disk_size: 100_000

networks:
- name: cf_director
  type: manual
  subnets:
  - range: ((director_az1_cidr))
    gateway: ((director_az1_default_route))
    dns: [((dns_ip))]
    reserved: ["((director_az1_reserved_start)) - ((director_az1_reserved_stop))"]
    static: ["((director_az1_static_start)) - ((director_az1_static_stop))"]

jobs:
- name: ((deployment_name))-boshlite
  instances: 1
  templates:
  - {name: nats, release: bosh}
  - {name: blobstore, release: bosh}
  - {name: director, release: bosh}
  - {name: health_monitor, release: bosh}
  - {name: registry, release: bosh}
  - {name: database-creation, release: postgresql-databases}
  resource_pool: bosh_vm
  networks:
  - name: cf_director
    static_ips: [((bosh_lite_private_ip))]
    default: [dns, gateway]
  properties:
    agent: {mbus: "nats://nats:((nats_password))@((bosh_lite_private_ip)):4222"}
    director:
      address: 127.0.0.1
      name: ((deployment_name))
      backup_destination:
        provider: s3
        options:
          s3_region: ((aws_region))
          credentials_source: env_or_profile
          bucket_name: ((director_backup_bucket))
      db:
        host: ((bosh_db_dns))
        port: ((bosh_db_port))
        user: bosh
        password: ((bosh_db_password))
        database: bosh
        adapter: postgres
      #generate_vm_passwords: true
      # https://bosh.io/docs/remove-dev-tools.html
      #remove_dev_tools: true
      enable_dedicated_status_worker: true
      enable_nats_delivered_templates: true
      enable_post_deploy: true
      #enable_snapshots: true
      #snapshot_schedule: 0 0 7 * * * UTC
      #self_snapshot_schedule: 0 0 6 * * * UTC
      # To/from Director
      #encryption: true
      max_threads: 10
      ssl:
        key: ((director_ssl.private_key))
        cert: ((director_ssl.certificate))
      user_management:
        provider: local
        local:
          users:
          - {name: director, password: ((director_password))}
          - {name: hm, password: ((hm_password))}
    hm:
      director_account:
        user: hm
        password: ((hm_password))
        ca_cert: ((default_ca.certificate))
      resurrector_enabled: true
    nats:
      address: 127.0.0.1
      user: nats
      password: ((nats_password))
      tls:
        ca: ((nats_ca.certificate))
        server:
          certificate: ((nats_server_tls.certificate))
          private_key: ((nats_server_tls.private_key))
        client_ca:
          certificate: ((nats_ca.certificate))
          private_key: ((nats_ca.private_key))
        director:
          certificate: ((nats_clients_director_tls.certificate))
          private_key: ((nats_clients_director_tls.private_key))
        health_monitor:
          certificate: ((nats_clients_health_monitor_tls.certificate))
          private_key: ((nats_clients_health_monitor_tls.private_key))
    ntp: &ntp [0.pool.ntp.org, 1.pool.ntp.org]
    registry:
      host: ((bosh_lite_private_ip))
      http:
        user: admin
        password: ((http_password))
        port: 25777
      username: admin
      password: ((registry_password))
      port: 25777
      db:
        host: ((bosh_db_dns))
        port: ((bosh_db_port))
        user: bosh
        password: ((bosh_db_password))
        database: bosh
        adapter: postgres
        port: ((bosh_db_port))
        user: bosh
        password: ((bosh_db_password))
        database: bosh
        adapter: postgres

cloud_provider:
  mbus: "https://mbus:((mbus_password))@((director_dns)):6868"
  cert: ((mbus_bootstrap_ssl))
  properties:
    agent: {mbus: "https://mbus:((mbus_password))@0.0.0.0:6868"}
    blobstore: {provider: local, path: /var/vcap/micro_bosh/data/cache}
    ntp: *ntp

